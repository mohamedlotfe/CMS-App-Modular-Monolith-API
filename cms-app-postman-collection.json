{
  "info": {
    "name": "CMS App - Modular Monolith API",
    "description": "Complete API collection for the NestJS CMS application with PostgreSQL, Redis/BullMQ, and Elasticsearch",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "cms-app-collection"
  },
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "Check the health status of all integrated services (PostgreSQL, Elasticsearch, Redis)"
          },
          "response": []
        }
      ],
      "description": "Health monitoring endpoints"
    },
    {
      "name": "CMS",
      "item": [
        {
          "name": "Authors",
          "item": [
            {
              "name": "Create Author",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/cms/authors",
                  "host": ["{{baseUrl}}"],
                  "path": ["cms", "authors"]
                },
                "description": "Create a new author"
              },
              "response": []
            },
            {
              "name": "Get All Authors",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/cms/authors",
                  "host": ["{{baseUrl}}"],
                  "path": ["cms", "authors"]
                },
                "description": "Retrieve all authors"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Tags",
          "item": [
            {
              "name": "Create Tag",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"technology\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/cms/tags",
                  "host": ["{{baseUrl}}"],
                  "path": ["cms", "tags"]
                },
                "description": "Create a new tag"
              },
              "response": []
            },
            {
              "name": "Get All Tags",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/cms/tags",
                  "host": ["{{baseUrl}}"],
                  "path": ["cms", "tags"]
                },
                "description": "Retrieve all tags"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Content",
          "item": [
            {
              "name": "Create Content",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Sample Article\",\n  \"body\": \"This is the content of the article with detailed information about the topic.\",\n  \"authorId\": \"{{authorId}}\",\n  \"tags\": [\"technology\", \"programming\"],\n  \"published\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/cms/content",
                  "host": ["{{baseUrl}}"],
                  "path": ["cms", "content"]
                },
                "description": "Create new content with automatic indexing to Elasticsearch"
              },
              "response": []
            },
            {
              "name": "Get All Content",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/cms/content",
                  "host": ["{{baseUrl}}"],
                  "path": ["cms", "content"]
                },
                "description": "Retrieve all content with author and tags"
              },
              "response": []
            },
            {
              "name": "Get Content by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/cms/content/{{contentId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["cms", "content", "{{contentId}}"]
                },
                "description": "Retrieve specific content by ID"
              },
              "response": []
            },
            {
              "name": "Update Content",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Updated Article Title\",\n  \"body\": \"Updated content with new information.\",\n  \"published\": false\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/cms/content/{{contentId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["cms", "content", "{{contentId}}"]
                },
                "description": "Update existing content (triggers re-indexing)"
              },
              "response": []
            },
            {
              "name": "Delete Content",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/cms/content/{{contentId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["cms", "content", "{{contentId}}"]
                },
                "description": "Delete content (triggers removal from Elasticsearch)"
              },
              "response": []
            }
          ]
        }
      ],
      "description": "Content Management System endpoints for authors, tags, and content"
    },
    {
      "name": "Discovery",
      "item": [
        {
          "name": "Search Content",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/discovery/search?q={{searchQuery}}&tags={{tags}}&author={{author}}&published={{published}}&page={{page}}&limit={{limit}}",
              "host": ["{{baseUrl}}"],
              "path": ["discovery", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "{{searchQuery}}",
                  "description": "Search query for full-text search"
                },
                {
                  "key": "tags",
                  "value": "{{tags}}",
                  "description": "Filter by tags (comma-separated)"
                },
                {
                  "key": "author",
                  "value": "{{author}}",
                  "description": "Filter by author name"
                },
                {
                  "key": "published",
                  "value": "{{published}}",
                  "description": "Filter by published status (true/false)"
                },
                {
                  "key": "page",
                  "value": "{{page}}",
                  "description": "Page number for pagination"
                },
                {
                  "key": "limit",
                  "value": "{{limit}}",
                  "description": "Number of results per page"
                }
              ]
            },
            "description": "Advanced search with Elasticsearch including filtering and pagination"
          },
          "response": []
        }
      ],
      "description": "Content discovery and search endpoints powered by Elasticsearch"
    },
    {
      "name": "Ingest",
      "item": [
        {
          "name": "Create Ingest Source",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"WordPress Blog\",\n  \"type\": \"wordpress\",\n  \"configJson\": \"{\\\"url\\\": \\\"https://example.com\\\", \\\"apiKey\\\": \\\"your-api-key\\\"}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/ingest/sources",
              "host": ["{{baseUrl}}"],
              "path": ["ingest", "sources"]
            },
            "description": "Create a new ingest source for bulk content import"
          },
          "response": []
        },
        {
          "name": "Start Ingest Job",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/ingest/jobs/{{sourceId}}/start",
              "host": ["{{baseUrl}}"],
              "path": ["ingest", "jobs", "{{sourceId}}", "start"]
            },
            "description": "Start a bulk ingest job for a specific source"
          },
          "response": []
        },
        {
          "name": "Get All Ingest Jobs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/ingest/jobs",
              "host": ["{{baseUrl}}"],
              "path": ["ingest", "jobs"]
            },
            "description": "Retrieve all ingest jobs with their status"
          },
          "response": []
        },
        {
          "name": "Get Ingest Job by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/ingest/jobs/{{jobId}}",
              "host": ["{{baseUrl}}"],
              "path": ["ingest", "jobs", "{{jobId}}"]
            },
            "description": "Retrieve specific ingest job details"
          },
          "response": []
        }
      ],
      "description": "Bulk content ingestion and import management endpoints"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set default values for variables if not already set",
          "if (!pm.environment.get('baseUrl')) {",
          "    pm.environment.set('baseUrl', 'http://localhost:3000');",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "authorId",
      "value": "",
      "type": "string"
    },
    {
      "key": "contentId",
      "value": "",
      "type": "string"
    },
    {
      "key": "sourceId",
      "value": "",
      "type": "string"
    },
    {
      "key": "jobId",
      "value": "",
      "type": "string"
    },
    {
      "key": "searchQuery",
      "value": "test",
      "type": "string"
    },
    {
      "key": "tags",
      "value": "technology,programming",
      "type": "string"
    },
    {
      "key": "author",
      "value": "John Doe",
      "type": "string"
    },
    {
      "key": "published",
      "value": "true",
      "type": "string"
    },
    {
      "key": "page",
      "value": "1",
      "type": "string"
    },
    {
      "key": "limit",
      "value": "10",
      "type": "string"
    }
  ]
}
